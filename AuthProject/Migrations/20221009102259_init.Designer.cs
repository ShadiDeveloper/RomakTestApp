// <auto-generated />
using System;
using AuthProject.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuthProject.Migrations
{
    [DbContext(typeof(AuthDbContext))]
    [Migration("20221009102259_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AuthProject.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0f7aa8ed-f39c-45a7-b0a7-0362c4f40ff4"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("f7ac39b4-b3b6-41c6-8c26-b774e37ba568"),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("AuthProject.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId")
                        .IsUnique();

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("22dedf88-c3df-41c5-a4b7-3918e788bbcf"),
                            Password = "Admin@123",
                            RoleId = new Guid("0f7aa8ed-f39c-45a7-b0a7-0362c4f40ff4"),
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = new Guid("87eb8360-482a-4708-948d-9f8749c98163"),
                            Password = "User@123",
                            RoleId = new Guid("f7ac39b4-b3b6-41c6-8c26-b774e37ba568"),
                            UserName = "User"
                        });
                });

            modelBuilder.Entity("AuthProject.Entities.User", b =>
                {
                    b.HasOne("AuthProject.Entities.Role", "Role")
                        .WithOne("User")
                        .HasForeignKey("AuthProject.Entities.User", "RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AuthProject.Entities.Role", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
